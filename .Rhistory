setwd("/home/milchevski/Desktop/data_science/repro/RepData_PeerAssessment1")
data <- read.csv("activity.csv", header = TRUE)
View(data)
head(data)
data <- read.csv("activity.csv", header = TRUE, na.strings = "NA")
head(data)
data$steps[1]
data$steps[1]+1
class(data$steps[1])
data$date[1]
class( data$date[1] )
data$date <- as.Date( data$date )
class( data$date[1] )
head(data)
class( data$interval[1] )
?tapply
?mean
means <- tapply( data$steps, data$date, mean, na.rm = TRUE )
head(means)
View(data)
?hist
hist( data$steps )
totals <- tapply( data$steps, data$date, sum, na.rm = TRUE )
hist( totals )
totals
means
hist(totals)
hist(totals)
totals
mean(totals)
median(totals)
head(data)
View(data)
average_per_interval <- tapply( data$steps, data$interval, mean, na.rm = TRUE )
average_per_interval
plot( average_per_interval )
plot( average_per_interval, type = "l", xlab = "interval", ylab="average steps per interval")
which.max(average_per_interval)
maksi <- which.max(average_per_interval)
maksi
hline(maksi)
abline(maksi)
abline(v=maksi)
abline(v=maksi, color="red")
abline(v=maksi, col="red")
abline(v=maksi, col="red")
plot( average_per_interval, type = "l", xlab = "interval", ylab="average steps per interval")
maksi <- which.max(average_per_interval)
abline(v=maksi, col="red")
plot( average_per_interval, type = "l", xlab = "interval", ylab="average steps per interval")
maksi <- which.max(average_per_interval)
abline(v=maksi, col="red")
sum(is.na(data$steps))
class(data)
data2 <- data
data2[1,1]
data2[1,1]<-0
data2[1,1]
data[1,1]
data2[1,1]<-NA
data[1,1]
data2[1,1]
names(data)
days <- unique( data$date )
days
data2 <- data
days <- unique( data$date )
for (a_day in days)
{
data2$steps[ is.na(data2$steps) & data$date==a_day  ] <- 2
}
View(data2)
data2 <- data
days <- unique( data$date )
for (a_day in days)
{
data2$steps[ is.na(data2$steps) & data$date==a_day  ] <- mean(data$steps[ data$date==a_day ], na.rm = TRUE  )
}
View(data2)
total_mean <- mean(totals)
total_mean
data2 <- data
days <- unique( data$date )
for (a_day in days)
{
a_mean <- mean(data$steps[ data$date==a_day ], na.rm = TRUE  )
if !is.nan(a_mean)
data2$steps[ is.na(data2$steps) & data$date==a_day  ] <- a_mean
else
data2$steps[ is.na(data2$steps) & data$date==a_day  ] <- total_mean
}
data2 <- data
days <- unique( data$date )
for (a_day in days)
{
a_mean <- mean(data$steps[ data$date==a_day ], na.rm = TRUE  )
if (!is.nan(a_mean))
data2$steps[ is.na(data2$steps) & data$date==a_day  ] <- a_mean
else
data2$steps[ is.na(data2$steps) & data$date==a_day  ] <- total_mean
}
View(data2)
data2 <- data
days <- unique( data$date )
for (a_day in days)
{
a_mean <- mean(data$steps[ data$date==a_day ], na.rm = TRUE  )
if (!is.nan(a_mean))
data2$steps[ is.na(data2$steps) & data$date==a_day  ] <- a_mean
else
data2$steps[ is.na(data2$steps) & data$date==a_day  ] <- 0
}
View(data2)
totals2 <- tapply( data2$steps, data2$date, sum, na.rm = TRUE )
hist(totals2)
mean(totals2)
median(totals2)
weekdays( data$date )
?weekdays
data$weekdays <- weekdays( data$date )
data$weekdays[ data$weekdays %in%  c("понеделник", "вторник", "среда", "четврток", "петок") ] <- “weekday”
data$weekdays[ data$weekdays %in%  c("сабота","недела") ] <- “weekday”
data$weekdays <- weekdays( data$date )
data$weekdays[ data$weekdays %in%  c("понеделник", "вторник", "среда", "четврток", "петок") ] <- "weekday"
data$weekdays[ data$weekdays %in%  c("сабота","недела") ] <- "weekend"
average_per_interval_weekend <- tapply( data$steps[ data$weekdays=="weekend" ], data$interval, mean, na.rm = TRUE )
average_per_interval_weekday <- tapply( data$steps[ data$weekdays=="weekday" ], data$interval, mean, na.rm = TRUE )
average_per_interval_weekend <- tapply( data$steps[ data$weekdays=="weekend" ], data$interval[ data$weekdays=="weekend" ], mean, na.rm = TRUE )
average_per_interval_weekend <- tapply( data$steps[ data$weekdays=="weekend" ], data$interval[ data$weekdays=="weekend" ], mean, na.rm = TRUE )
average_per_interval_weekday <- tapply( data$steps[ data$weekdays=="weekday" ], data$interval[ data$weekdays=="weekend" ], mean, na.rm = TRUE )
average_per_interval_weekend <- tapply( data$steps[ data$weekdays=="weekend" ], data$interval[ data$weekdays=="weekend" ], mean, na.rm = TRUE )
average_per_interval_weekday <- tapply( data$steps[ data$weekdays=="weekday" ], data$interval[ data$weekdays=="weekday" ], mean, na.rm = TRUE )
plot(average_per_interval_weekend )
plot(average_per_interval_weekend , type = "l")
install.packages(knitR)
install.packages(knitr)
install.packages("knitR")
install.packages("knitr")
